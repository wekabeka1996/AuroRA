# Nginx reverse proxy configuration for Aurora P3-D Live Feed
# Place this in /etc/nginx/sites-available/aurora and symlink to sites-enabled/

server {
  listen 443 ssl http2;
  server_name your.host.com;

  # SSL Configuration
  ssl_certificate /etc/ssl/certs/your_cert.pem;
  ssl_certificate_key /etc/ssl/private/your_key.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  # HSTS (HTTP Strict Transport Security)
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # Security headers
  add_header X-Frame-Options DENY always;
  add_header X-Content-Type-Options nosniff always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Content-Security-Policy "default-src 'self'; connect-src 'self' https://your-domain.com;" always;

  # SSE proxy to live_feed on localhost:8001
  location /sse {
    proxy_pass http://127.0.0.1:8001/sse;
    proxy_http_version 1.1;
    proxy_set_header Connection '';
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Critical for SSE - disable buffering
    proxy_buffering off;
    proxy_cache off;
    proxy_read_timeout 3600s;  # Long timeout for persistent connections

    # SSE-specific headers
    add_header Cache-Control no-cache;
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers "Last-Event-ID,X-Auth-Token";

    # Optional: Add authentication
    # auth_request /auth;
  }

  # Health check endpoints
  location /health {
    proxy_pass http://127.0.0.1:8001/health;
    proxy_set_header Host $host;
    proxy_read_timeout 10s;
  }

  location /healthz {
    proxy_pass http://127.0.0.1:8001/healthz;
    proxy_set_header Host $host;
    proxy_read_timeout 5s;
  }

  # Static dashboard files (if serving dashboard from same nginx)
  location /dashboard {
    alias /opt/aurora/dashboard/build;
    try_files $uri $uri/ /dashboard/index.html;

    # Security headers for static content
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy strict-origin-when-cross-origin;
  }

  # Optional: Authentication endpoint for SSE
  location /auth {
    proxy_pass http://127.0.0.1:8001/auth;  # Implement in live_feed.py if needed
    proxy_set_header Host $host;
  }

  # Deny all other requests
  location / {
    return 404;
  }
}

# Redirect HTTP to HTTPS
server {
  listen 80;
  server_name your.host.com;
  return 301 https://$server_name$request_uri;
}