name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Lint (ruff)
        run: |
          pip install ruff
          ruff check .
      - name: Run unit tests with coverage
        run: |
          pytest --cov=. --cov-report=term --cov-report=xml --maxfail=1 -q
      - name: Enforce coverage >=70%
        run: |
          coverage xml
          python - <<'PY'
import xml.etree.ElementTree as ET, sys
tree = ET.parse('coverage.xml')
rate = float(tree.getroot().attrib['line-rate']) * 100
print(f"Coverage: {rate:.2f}%")
if rate < 70:
    print('Coverage threshold not met (70%)')
    sys.exit(1)
PY
  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t aurora-api:ci .
